{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\virtusa\\\\project\\\\football_league_management\\\\src\\\\components\\\\Sidebar.js\",\n    _s = $RefreshSig$();\n\nimport { useStateValue } from '../utils/StateProvider';\nimport { actionTypes, SortBy } from '../utils/Reducer';\nimport { Box, Drawer, Paper, Typography, Stack, Divider, Autocomplete, TextField, ToggleButton, ToggleButtonGroup, Slider } from '@mui/material';\nimport { InlineIcon } from '@iconify/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Sidebar(props) {\n  _s();\n\n  // get filter state\n  let [{\n    filter,\n    filterToggle,\n    products\n  }, dispatch] = useStateValue();\n  const drawerWidth = 300;\n\n  const handleDrawerToggle = () => {\n    dispatch({\n      type: actionTypes.SET_FILTER_TOGGLE,\n      filterToggle: !filterToggle\n    });\n  };\n\n  const drawer = /*#__PURE__*/_jsxDEV(Stack, {\n    spacing: 3,\n    sx: {\n      py: {\n        xs: 3,\n        sm: 3,\n        md: 3,\n        lg: 0,\n        xl: 0\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        px: 3\n      },\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          children: [/*#__PURE__*/_jsxDEV(InlineIcon, {\n            icon: \"fa-solid:filter\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, this), \" Filter\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n          id: \"product-name-filter\",\n          freeSolo: true,\n          options: products.map(product => product.productName),\n          renderInput: params => /*#__PURE__*/_jsxDEV(TextField, {\n            fullWidth: true,\n            ...params,\n            label: \"Product Name\",\n            value: filter.productName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 50\n          }, this),\n          onInputChange: (event, productName) => {\n            dispatch({\n              type: actionTypes.SET_FILTERS,\n              filter: { ...filter,\n                productName\n              }\n            });\n          },\n          value: filter.productName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"Price Range\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          getAriaLabel: () => 'Price range',\n          value: [filter.priceRangeFrom, filter.priceRangeTo],\n          onChange: (event, _ref) => {\n            let [priceRangeFrom, priceRangeTo] = _ref;\n            dispatch({\n              type: actionTypes.SET_FILTERS,\n              filter: { ...filter,\n                priceRangeFrom,\n                priceRangeTo\n              }\n            });\n          },\n          disableSwap: true,\n          step: null,\n          min: 0,\n          max: 20000,\n          marks: [{\n            value: 0,\n            label: '₹0'\n          }, {\n            value: 5000,\n            label: '₹5K'\n          }, {\n            value: 10000,\n            label: '₹10K'\n          }, {\n            value: 15000,\n            label: '₹15K'\n          }, {\n            value: 20000,\n            label: '₹20K+'\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          sx: {\n            pt: '1rem'\n          },\n          children: \"RAM\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          value: filter.ram,\n          onChange: (event, ram) => {\n            dispatch({\n              type: actionTypes.SET_FILTERS,\n              filter: { ...filter,\n                ram\n              }\n            });\n          },\n          size: \"small\",\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"2GB RAM\",\n            children: \"2 GB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"4GB RAM\",\n            children: \"4 GB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"6GB RAM\",\n            children: \"6 GB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"8GB RAM\",\n            children: \"8 GB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: \"Storage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          value: filter.storage,\n          onChange: (event, storage) => {\n            dispatch({\n              type: actionTypes.SET_FILTERS,\n              filter: { ...filter,\n                storage\n              }\n            });\n          },\n          size: \"small\",\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"32GB storage\",\n            children: \"32 GB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"64GB storage\",\n            children: \"64 GB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"128GB storage\",\n            children: \"128 GB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: \"256GB storage\",\n            children: \"256 GB\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        px: 3,\n        pb: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Stack, {\n        spacing: 2,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h5\",\n          children: [/*#__PURE__*/_jsxDEV(InlineIcon, {\n            icon: \"fa-solid:sort\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this), \" Sort\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n          value: filter.sort,\n          exclusive: true,\n          onChange: (event, sort) => {\n            dispatch({\n              type: actionTypes.SET_FILTERS,\n              filter: { ...filter,\n                sort\n              }\n            });\n          },\n          \"aria-label\": \"sort\",\n          size: \"small\",\n          orientation: \"vertical\",\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: SortBy.NewArrivals,\n            children: \"New Arrivals\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: SortBy.PriceLowToHigh,\n            children: \"Price: Low - High\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: SortBy.PriceHighToLow,\n            children: \"Price: High - Low\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), props.admin ? /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: SortBy.Quantity,\n            children: \"Quantity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 40\n          }, this) : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: {\n        md: drawerWidth\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"temporary\",\n      open: filterToggle,\n      onClose: handleDrawerToggle,\n      ModalProps: {\n        keepMounted: true\n      },\n      sx: {\n        display: {\n          xs: 'block',\n          sm: 'block',\n          md: 'none'\n        },\n        '& .MuiDrawer-paper': {\n          boxSizing: 'border-box',\n          width: drawerWidth\n        }\n      },\n      children: drawer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      variant: \"permanent\",\n      sx: {\n        display: {\n          xs: 'none',\n          sm: 'none',\n          md: 'block'\n        },\n        '& .MuiDrawer-paper': {\n          boxSizing: 'border-box',\n          width: drawerWidth,\n          position: 'relative',\n          overflowY: 'visible'\n        }\n      },\n      open: true,\n      children: drawer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Sidebar, \"aFPoMMWQvctwOJ1Kv0D6K/ZAU+M=\", false, function () {\n  return [useStateValue];\n});\n\n_c = Sidebar;\nexport default Sidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/virtusa/project/football_league_management/src/components/Sidebar.js"],"names":["useStateValue","actionTypes","SortBy","Box","Drawer","Paper","Typography","Stack","Divider","Autocomplete","TextField","ToggleButton","ToggleButtonGroup","Slider","InlineIcon","Sidebar","props","filter","filterToggle","products","dispatch","drawerWidth","handleDrawerToggle","type","SET_FILTER_TOGGLE","drawer","py","xs","sm","md","lg","xl","px","map","product","productName","params","event","SET_FILTERS","priceRangeFrom","priceRangeTo","value","label","pt","ram","storage","pb","sort","NewArrivals","PriceLowToHigh","PriceHighToLow","admin","Quantity","width","keepMounted","display","boxSizing","position","overflowY"],"mappings":"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","sourcesContent":["import { useStateValue } from '../utils/StateProvider';\nimport { actionTypes, SortBy } from '../utils/Reducer';\nimport { Box, Drawer, Paper, Typography, Stack, Divider, Autocomplete, TextField, ToggleButton, ToggleButtonGroup, Slider } from '@mui/material';\nimport { InlineIcon } from '@iconify/react';\n\n\nfunction Sidebar(props) {\n    // get filter state\n    let [{ filter, filterToggle, products }, dispatch] = useStateValue();\n\n    const drawerWidth = 300;\n\n    const handleDrawerToggle = () => {\n        dispatch({\n            type: actionTypes.SET_FILTER_TOGGLE,\n            filterToggle: !filterToggle\n        });\n    };\n\n    const drawer = (\n        <Stack spacing={3} sx={{ py: { xs: 3, sm: 3, md: 3, lg: 0, xl: 0 } }}>\n            <Box sx={{ px: 3 }}>\n                <Stack spacing={2}>\n                    <Typography gutterBottom variant=\"h5\">\n                        <InlineIcon icon=\"fa-solid:filter\" /> Filter\n                    </Typography>\n                    <Autocomplete\n                        id=\"product-name-filter\"\n                        freeSolo\n                        options={products.map(product => product.productName)}\n                        renderInput={(params) => <TextField fullWidth {...params} label=\"Product Name\" value={filter.productName} />}\n                        onInputChange={(event, productName) => {\n                            dispatch({\n                                type: actionTypes.SET_FILTERS,\n                                filter: { ...filter, productName }\n                            });\n                        }}\n                        value={filter.productName}\n                    />\n                    <Typography variant=\"body1\">\n                        Price Range\n                    </Typography>\n                    <Slider\n                        getAriaLabel={() => 'Price range'}\n                        value={[filter.priceRangeFrom, filter.priceRangeTo]}\n                        onChange={(event, [priceRangeFrom, priceRangeTo]) => {\n                            dispatch({\n                                type: actionTypes.SET_FILTERS,\n                                filter: { ...filter, priceRangeFrom, priceRangeTo }\n                            });\n                        }}\n                        disableSwap\n                        step={null}\n                        min={0}\n                        max={20000}\n                        marks={[\n                            { value: 0, label: '₹0' },\n                            { value: 5000, label: '₹5K' },\n                            { value: 10000, label: '₹10K' },\n                            { value: 15000, label: '₹15K' },\n                            { value: 20000, label: '₹20K+' },\n                        ]}\n                    />\n                    <Typography variant=\"body1\" sx={{pt: '1rem'}}>\n                        RAM\n                    </Typography>\n                    <ToggleButtonGroup\n                        value={filter.ram}\n                        onChange={(event, ram) => {\n                            dispatch({\n                                type: actionTypes.SET_FILTERS,\n                                filter: { ...filter, ram }\n                            });\n                        }}\n                        size=\"small\"\n                        fullWidth={true}\n                    >\n                        <ToggleButton value=\"2GB RAM\">\n                            2 GB\n                        </ToggleButton>\n                        <ToggleButton value=\"4GB RAM\">\n                            4 GB\n                        </ToggleButton>\n                        <ToggleButton value=\"6GB RAM\">\n                            6 GB\n                        </ToggleButton>\n                        <ToggleButton value=\"8GB RAM\">\n                            8 GB\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                    <Typography variant=\"body1\">\n                        Storage\n                    </Typography>\n                    <ToggleButtonGroup\n                        value={filter.storage}\n                        onChange={(event, storage) => {\n                            dispatch({\n                                type: actionTypes.SET_FILTERS,\n                                filter: { ...filter, storage }\n                            });\n                        }}\n                        size=\"small\"\n                        fullWidth={true}\n                    >\n                        <ToggleButton value=\"32GB storage\">\n                            32 GB\n                        </ToggleButton>\n                        <ToggleButton value=\"64GB storage\">\n                            64 GB\n                        </ToggleButton>\n                        <ToggleButton value=\"128GB storage\">\n                            128 GB\n                        </ToggleButton>\n                        <ToggleButton value=\"256GB storage\">\n                            256 GB\n                        </ToggleButton>\n                    </ToggleButtonGroup>\n                </Stack>\n            </Box>\n            <Divider />\n            <Box sx={{ px: 3, pb: 2 }}>\n                <Stack spacing={2}>\n                    <Typography gutterBottom variant=\"h5\">\n                        <InlineIcon icon=\"fa-solid:sort\" /> Sort\n                    </Typography>\n                    <ToggleButtonGroup\n                        value={filter.sort}\n                        exclusive\n                        onChange={(event, sort) => {\n                            dispatch({\n                                type: actionTypes.SET_FILTERS,\n                                filter: { ...filter, sort }\n                            });\n                        }}\n                        aria-label=\"sort\"\n                        size=\"small\"\n                        orientation=\"vertical\"\n                        fullWidth={true}\n                    >\n                        <ToggleButton value={SortBy.NewArrivals}>\n                            New Arrivals\n                        </ToggleButton>\n                        <ToggleButton value={SortBy.PriceLowToHigh}>\n                            Price: Low - High\n                        </ToggleButton>\n                        <ToggleButton value={SortBy.PriceHighToLow}>\n                            Price: High - Low\n                        </ToggleButton>\n                        {props.admin ? <ToggleButton value={SortBy.Quantity}>\n                            Quantity\n                        </ToggleButton> : ''}\n                    </ToggleButtonGroup>\n                </Stack>\n            </Box>\n        </Stack>\n      );\n\n    return (\n        <Box sx={{ width: { md: drawerWidth } }}>\n            <Drawer\n                variant=\"temporary\"\n                open={filterToggle}\n                onClose={handleDrawerToggle}\n                ModalProps={{\n                    keepMounted: true\n                }}\n                sx={{\n                    display: { xs: 'block', sm: 'block', md: 'none' },\n                    '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth },\n                }}\n            >\n                {drawer}\n            </Drawer>\n            <Drawer\n                variant=\"permanent\"\n                sx={{\n                    display: { xs: 'none', sm: 'none', md: 'block' },\n                    '& .MuiDrawer-paper': { boxSizing: 'border-box', width: drawerWidth, position: 'relative', overflowY: 'visible' },\n                }}\n                open\n            >\n                {drawer}\n            </Drawer>\n        </Box>\n    );\n}\n\nexport default Sidebar;"]},"metadata":{},"sourceType":"module"}