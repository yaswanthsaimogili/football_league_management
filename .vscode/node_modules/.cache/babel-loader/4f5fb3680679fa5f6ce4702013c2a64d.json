{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\virtusa\\\\project\\\\football_league_management\\\\src\\\\pages\\\\ResetPassword.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { useStateValue } from \"../utils/StateProvider\";\nimport { actionTypes, openSnackbar } from \"../utils/Reducer\";\nimport { Input, Container } from '@mui/material';\nimport { useHistory, useParams } from 'react-router-dom';\nimport { ApiClient } from '../utils/ApiClient';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ResetPassword() {\n  _s();\n\n  const {\n    code\n  } = useParams();\n  const [state, dispatch] = useStateValue();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const onSubmit = () => {\n    if (password.length < 5) {\n      dispatch(openSnackbar('Length of password should be at least 5.', 'error'));\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      dispatch(openSnackbar('Confirm password does not match entered password.', 'error'));\n      return;\n    }\n\n    setLoading(true);\n    ApiClient.post('/resetPassword', {\n      token: code,\n      newPassword: password\n    }).then(response => {\n      history.push('/');\n      dispatch(openSnackbar('You can now login using your new password.', 'success'));\n    }).finally(() => setLoading(false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxWidth: \"sm\",\n    style: {\n      height: '100vh',\n      flexDirection: 'column',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        marginBottom: '10px'\n      },\n      children: \"RESET PASSWORD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        textAlign: 'justify'\n      },\n      children: \"Enter and confirm your new password.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"password\",\n      placeholder: \"Password\",\n      type: \"password\",\n      value: password,\n      onChange: e => setPassword(e.target.value),\n      style: {\n        margin: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      id: \"confirmPassword\",\n      placeholder: \"Confirm Password\",\n      type: \"password\",\n      value: confirmPassword,\n      onChange: e => setConfirmPassword(e.target.value),\n      style: {\n        margin: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n      id: \"submitButton\",\n      variant: \"contained\",\n      onClick: onSubmit,\n      style: {\n        margin: '10px'\n      },\n      loading: loading,\n      loadingIndicator: \"Resetting...\",\n      children: \"RESET PASSWORD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ResetPassword, \"AjShEqgn27x33SpUrrhguDZsnW4=\", false, function () {\n  return [useParams, useStateValue, useHistory];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/virtusa/project/football_league_management/src/pages/ResetPassword.js"],"names":["useState","useStateValue","actionTypes","openSnackbar","Input","Container","useHistory","useParams","ApiClient","LoadingButton","ResetPassword","code","state","dispatch","password","setPassword","confirmPassword","setConfirmPassword","loading","setLoading","history","onSubmit","length","post","token","newPassword","then","response","push","finally","height","flexDirection","display","justifyContent","alignItems","margin","marginBottom","textAlign","e","target","value"],"mappings":"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","sourcesContent":["import { useState } from 'react'\nimport { useStateValue } from \"../utils/StateProvider\";\nimport { actionTypes, openSnackbar } from \"../utils/Reducer\";\nimport { Input, Container } from '@mui/material'\nimport { useHistory, useParams } from 'react-router-dom';\nimport { ApiClient } from '../utils/ApiClient';\nimport LoadingButton from '@mui/lab/LoadingButton';\n\nfunction ResetPassword() {\n    const { code } = useParams();\n    const [state, dispatch] = useStateValue();\n\n    const [password , setPassword] = useState(\"\");\n    const [confirmPassword , setConfirmPassword] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n\n    const history = useHistory();\n\n    const onSubmit = () => {\n        if(password.length < 5){\n            dispatch(openSnackbar('Length of password should be at least 5.', 'error'));\n            return;\n        }\n\n        if(password !== confirmPassword){\n            dispatch(openSnackbar('Confirm password does not match entered password.', 'error'));\n            return;\n        }\n      setLoading(true);\n\n      ApiClient.post('/resetPassword', { token: code, newPassword: password }).then(response => {\n        history.push('/');\n        dispatch(openSnackbar('You can now login using your new password.', 'success'));\n      }).finally(() => setLoading(false));\n    }\n\n    return(\n        <Container maxWidth=\"sm\" style={{height : '100vh', flexDirection: 'column', display: 'flex', justifyContent: 'center', alignItems: 'center', margin: 'auto' }}>\n            <h1 style = {{marginBottom : '10px'}} >RESET PASSWORD</h1>\n            <p style={{ textAlign: 'justify' }}>Enter and confirm your new password.</p>\n            <Input id = 'password' placeholder = \"Password\" type = \"password\" value = {password} onChange = {(e) => setPassword(e.target.value)} style = {{margin : '10px'}}/>\n            <Input id = 'confirmPassword' placeholder = \"Confirm Password\" type = \"password\" value = {confirmPassword} onChange = {(e) => setConfirmPassword(e.target.value)} style = {{margin : '10px'}}/>\n            <LoadingButton \n                id = 'submitButton' \n                variant = 'contained'\n                onClick = {onSubmit} \n                style = {{margin : '10px'}} \n                loading={loading}\n                loadingIndicator=\"Resetting...\">\n                RESET PASSWORD\n            </LoadingButton>\n        </Container>\n    )\n}\n\nexport default ResetPassword;"]},"metadata":{},"sourceType":"module"}