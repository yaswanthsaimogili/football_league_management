{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\virtusa\\\\project\\\\football_league_management\\\\src\\\\pages\\\\admin\\\\EditProduct.js\",\n    _s = $RefreshSig$();\n\nimport Navbar from \"../../components/Navbar\";\nimport { Box, Stack, TextField } from '@mui/material';\nimport { useState, useEffect } from 'react';\nimport { useStateValue } from \"../../utils/StateProvider\";\nimport { ApiClient } from '../../utils/ApiClient';\nimport { actionTypes, openSnackbar } from '../../utils/Reducer';\nimport { useParams, useHistory } from 'react-router-dom';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction EditProduct() {\n  _s();\n\n  var _products$find;\n\n  const {\n    productId\n  } = useParams();\n  const history = useHistory();\n  const [{\n    products\n  }, dispatch] = useStateValue();\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [description, setDescription] = useState('');\n  const [imageUrl, setImageUrl] = useState('');\n  const [quantity, setQuantity] = useState(0);\n  const [nameError, setNameError] = useState(false);\n  const [priceError, setPriceError] = useState(false);\n  const [descriptionError, setDescriptionError] = useState(false);\n  const [imageUrlError, setImageUrlError] = useState(false);\n  const [quantityError, setQuantityError] = useState(false);\n  const [loading, setLoading] = useState(false); // set product\n\n  const product = (_products$find = products.find(x => x.productId === productId)) !== null && _products$find !== void 0 ? _products$find : {};\n  useEffect(() => {\n    if (!product.productId) {\n      dispatch(openSnackbar('This product does not seem to be available anymore!', 'error'));\n      history.push('/');\n    } else {\n      setName(product.productName);\n      setPrice(product.price);\n      setQuantity(product.quantity);\n      setDescription(product.description);\n      setImageUrl(product.imageUrl);\n    }\n  }, [product]);\n\n  const onSubmit = () => {\n    setNameError(false);\n    setPriceError(false);\n    setDescriptionError(false);\n    setImageUrlError(false);\n    setQuantityError(false);\n\n    if (name.trim() === '') {\n      setNameError(true);\n      dispatch(openSnackbar('Product Name cannot be empty.', 'error'));\n      return;\n    }\n\n    if (price <= 0) {\n      setPriceError(true);\n      dispatch(openSnackbar('Product price must be a positive value.', 'error'));\n      return;\n    }\n\n    if (description.trim() === '') {\n      setDescriptionError(true);\n      dispatch(openSnackbar('Description cannot be empty.', 'error'));\n      return;\n    }\n\n    if (imageUrl.trim() === '') {\n      setImageUrlError(true);\n      dispatch(openSnackbar('Image URL cannot be empty.', 'error'));\n      return;\n    }\n\n    try {\n      new URL(imageUrl);\n    } catch (_) {\n      setImageUrlError(true);\n      dispatch(openSnackbar('Invalid Image URL.', 'error'));\n      return;\n    }\n\n    if (quantity <= 0) {\n      setQuantityError(true);\n      dispatch(openSnackbar('Quantity must be a positive value.', 'error'));\n      return;\n    }\n\n    setLoading(true);\n    ApiClient.post(`/admin/productEdit/${product.productId}`, {\n      productName: name,\n      price,\n      imageUrl,\n      description,\n      quantity\n    }).then(response => {\n      if (response.data) {\n        // success\n        dispatch(openSnackbar('Product edited successfully.', 'success'));\n        const index = products.findIndex(x => x.productId === product.productId);\n        products[index] = { ...products[index],\n          productName: name,\n          price,\n          imageUrl,\n          description,\n          quantity\n        };\n        dispatch({\n          type: actionTypes.SET_PRODUCTS,\n          products\n        });\n        history.push('/');\n      }\n    }).finally(() => setLoading(false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      style: {\n        paddingTop: '75px'\n      },\n      maxWidth: \"sm\",\n      spacing: 2,\n      sx: {\n        m: '2rem auto',\n        textAlign: 'left'\n      },\n      id: \"editMobileBody\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          padding: '0rem 0.6rem'\n        },\n        children: \"Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"mobileName\",\n        label: \"Product Name\",\n        placeholder: \"Enter Name\",\n        error: nameError,\n        type: \"text\",\n        value: name,\n        onChange: e => setName(e.target.value),\n        style: {\n          margin: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"mobilePrice\",\n        label: \"Price\",\n        placeholder: \"Enter Price\",\n        error: priceError,\n        type: \"number\",\n        value: price,\n        onChange: e => setPrice(e.target.value),\n        style: {\n          margin: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"mobileDescription\",\n        label: \"Description\",\n        placeholder: \"Enter Description\",\n        error: descriptionError,\n        multiline: true,\n        type: \"text\",\n        value: description,\n        onChange: e => setDescription(e.target.value),\n        style: {\n          margin: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"mobileImageUrl\",\n        label: \"Image URL\",\n        placeholder: \"Enter Image URL\",\n        error: imageUrlError,\n        type: \"url\",\n        value: imageUrl,\n        onChange: e => setImageUrl(e.target.value),\n        style: {\n          margin: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"mobileQuantity\",\n        label: \"Quantity\",\n        placeholder: \"Enter Quantity\",\n        error: quantityError,\n        type: \"number\",\n        value: quantity,\n        onChange: e => setQuantity(e.target.value),\n        style: {\n          margin: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        id: \"editMobileButton\",\n        variant: \"contained\",\n        onClick: onSubmit,\n        loading: loading,\n        loadingIndicator: \"Editing...\",\n        children: \"EDIT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EditProduct, \"U/XKzz0d5CrF4VfZG7NSaUb5t6U=\", false, function () {\n  return [useParams, useHistory, useStateValue];\n});\n\n_c = EditProduct;\nexport default EditProduct;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProduct\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/virtusa/project/football_league_management/src/pages/admin/EditProduct.js"],"names":["Navbar","Box","Stack","TextField","useState","useEffect","useStateValue","ApiClient","actionTypes","openSnackbar","useParams","useHistory","LoadingButton","EditProduct","productId","history","products","dispatch","name","setName","price","setPrice","description","setDescription","imageUrl","setImageUrl","quantity","setQuantity","nameError","setNameError","priceError","setPriceError","descriptionError","setDescriptionError","imageUrlError","setImageUrlError","quantityError","setQuantityError","loading","setLoading","product","find","x","push","productName","onSubmit","trim","URL","_","post","then","response","data","index","findIndex","type","SET_PRODUCTS","finally","paddingTop","m","textAlign","padding","e","target","value","margin"],"mappings":"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","sourcesContent":["import Navbar from \"../../components/Navbar\";\nimport { Box, Stack, TextField } from '@mui/material';\nimport { useState, useEffect } from 'react';\nimport { useStateValue } from \"../../utils/StateProvider\";\nimport { ApiClient } from '../../utils/ApiClient';\nimport { actionTypes, openSnackbar } from '../../utils/Reducer';\nimport { useParams, useHistory } from 'react-router-dom';\nimport LoadingButton from '@mui/lab/LoadingButton';\n\nfunction EditProduct() {\n    const { productId } = useParams();\n    const history = useHistory();\n    const [{ products }, dispatch] = useStateValue();\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(0);\n    const [description, setDescription] = useState('');\n    const [imageUrl, setImageUrl] = useState('');\n    const [quantity, setQuantity] = useState(0);\n\n    const [nameError, setNameError] = useState(false);\n    const [priceError, setPriceError] = useState(false);\n    const [descriptionError, setDescriptionError] = useState(false);\n    const [imageUrlError, setImageUrlError] = useState(false);\n    const [quantityError, setQuantityError] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    // set product\n    const product = products.find(x => x.productId === productId) ?? {};\n\n    useEffect(() => {\n        if (!product.productId) {        \n        dispatch(openSnackbar('This product does not seem to be available anymore!', 'error'));\n        history.push('/');\n        }\n        else {\n            setName(product.productName);\n            setPrice(product.price);\n            setQuantity(product.quantity);\n            setDescription(product.description);\n            setImageUrl(product.imageUrl);\n        }\n    }, [product]);\n\n    const onSubmit = () =>{\n      setNameError(false);\n      setPriceError(false);\n      setDescriptionError(false);\n      setImageUrlError(false);\n      setQuantityError(false);\n\n      if (name.trim() === '') {\n        setNameError(true);\n        dispatch(openSnackbar('Product Name cannot be empty.', 'error'));\n        return;\n      }\n\n      if (price <= 0) {\n        setPriceError(true);\n        dispatch(openSnackbar('Product price must be a positive value.', 'error'));\n        return;\n      }\n\n      if (description.trim() === '') {\n        setDescriptionError(true);\n        dispatch(openSnackbar('Description cannot be empty.', 'error'));\n        return;\n      }\n\n      if (imageUrl.trim() === '') {\n        setImageUrlError(true);\n        dispatch(openSnackbar('Image URL cannot be empty.', 'error'));\n        return;\n      }\n\n        try {\n            new URL(imageUrl);\n        }\n        catch (_) {\n            setImageUrlError(true);\n            dispatch(openSnackbar('Invalid Image URL.', 'error'));\n            return;\n        }\n\n      if (quantity <= 0) {\n        setQuantityError(true);\n        dispatch(openSnackbar('Quantity must be a positive value.', 'error'));\n        return;\n      }\n\n      setLoading(true);\n      ApiClient.post(`/admin/productEdit/${product.productId}`, {\n        productName: name, price, imageUrl, description, quantity\n      }).then(response => {\n        if (response.data) {            \n          // success\n          dispatch(openSnackbar('Product edited successfully.', 'success'));\n          const index = products.findIndex(x => x.productId === product.productId);\n          products[index] = {\n              ...products[index],\n              productName: name,\n              price,\n              imageUrl,\n              description,\n              quantity\n          }\n          dispatch({\n                type: actionTypes.SET_PRODUCTS,\n                products\n            });\n            history.push('/');\n        }\n      }).finally(() => setLoading(false));\n\n    }\n\n    return (\n        <Box>\n            <Navbar/>\n            <Stack style={{paddingTop: '75px'}} maxWidth=\"sm\" spacing={2} sx={{ m: '2rem auto', textAlign: 'left' }} id=\"editMobileBody\">\n                <h2 style={{ padding: '0rem 0.6rem' }}>Edit Product</h2>\n                <TextField id='mobileName' label=\"Product Name\" placeholder=\"Enter Name\" error={nameError} type=\"text\" value={name} onChange={(e)=>setName(e.target.value)} style={{margin : '10px'}} />\n                <TextField id='mobilePrice' label=\"Price\" placeholder=\"Enter Price\" error={priceError} type=\"number\" value={price} onChange={(e) => setPrice(e.target.value)} style={{margin : '10px'}}/>\n                <TextField id='mobileDescription' label=\"Description\" placeholder=\"Enter Description\" error={descriptionError} multiline={true} type=\"text\" value={description} onChange={(e) => setDescription(e.target.value)} style={{margin : '10px'}}/>\n                <TextField id='mobileImageUrl' label=\"Image URL\" placeholder=\"Enter Image URL\" error={imageUrlError} type=\"url\" value={imageUrl} onChange={(e) => setImageUrl(e.target.value)} style={{margin : '10px'}}/>\n                <TextField id='mobileQuantity' label=\"Quantity\" placeholder=\"Enter Quantity\" error={quantityError} type=\"number\" value={quantity} onChange={(e) => setQuantity(e.target.value)} style={{margin : '10px'}}/>\n                <LoadingButton \n                  id = 'editMobileButton' \n                  variant = 'contained' \n                  onClick = {onSubmit} \n                  loading={loading}\n                  loadingIndicator=\"Editing...\">\n                  EDIT\n                </LoadingButton>\n            </Stack>\n        </Box>\n    )\n}\n\nexport default EditProduct;"]},"metadata":{},"sourceType":"module"}