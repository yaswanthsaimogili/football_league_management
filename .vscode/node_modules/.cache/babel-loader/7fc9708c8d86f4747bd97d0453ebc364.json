{"ast":null,"code":"import { ApiClient } from './ApiClient';\n\nfunction loadScript(src) {\n  return new Promise(resolve => {\n    const script = document.createElement(\"script\");\n    script.src = src;\n\n    script.onload = () => {\n      resolve(true);\n    };\n\n    script.onerror = () => {\n      resolve(false);\n    };\n\n    document.body.appendChild(script);\n  });\n}\n\nexport function displayRazorpay(orderId, amount) {\n  return new Promise(async (resolve, reject) => {\n    const res = await loadScript(\"https://checkout.razorpay.com/v1/checkout.js\");\n\n    if (!res) {\n      console.error(\"Razorpay SDK failed to load. Are you online?\");\n      reject();\n      return;\n    }\n\n    const options = {\n      key: \"rzp_test_HwygC9FrX26ndC\",\n      // Enter the Key ID generated from the Dashboard\n      amount: amount.toString(),\n      currency: \"INR\",\n      name: \"STORE.\",\n      description: \"Payment for an order.\",\n      image: {\n        logo: null\n      },\n      order_id: orderId,\n      handler: async function (response) {\n        const data = {\n          razorpay_payment_id: response.razorpay_payment_id,\n          razorpay_order_id: response.razorpay_order_id,\n          razorpay_signature: response.razorpay_signature\n        };\n        const result = await ApiClient.post(\"/razorpay/payment\", data);\n        resolve(result);\n      },\n      prefill: {\n        name: \"STORE.\",\n        email: \"admin@store.com\",\n        contact: \"9999999999\"\n      },\n      notes: {\n        address: \"Store Office\"\n      },\n      theme: {\n        color: \"#61dafb\"\n      }\n    };\n    const paymentObject = new window.Razorpay(options);\n    paymentObject.open();\n  });\n}","map":{"version":3,"sources":["C:/Users/HP/Desktop/virtusa/project/football_league_management/src/utils/Razorpay.js"],"names":["ApiClient","loadScript","src","Promise","resolve","script","document","createElement","onload","onerror","body","appendChild","displayRazorpay","orderId","amount","reject","res","console","error","options","key","toString","currency","name","description","image","logo","order_id","handler","response","data","razorpay_payment_id","razorpay_order_id","razorpay_signature","result","post","prefill","email","contact","notes","address","theme","color","paymentObject","window","Razorpay","open"],"mappings":"AAAA,SAASA,SAAT,QAA0B,aAA1B;;AAEA,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AACrB,SAAO,IAAIC,OAAJ,CAAaC,OAAD,IAAa;AAC5B,UAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;AACAF,IAAAA,MAAM,CAACH,GAAP,GAAaA,GAAb;;AACAG,IAAAA,MAAM,CAACG,MAAP,GAAgB,MAAM;AAClBJ,MAAAA,OAAO,CAAC,IAAD,CAAP;AACH,KAFD;;AAGAC,IAAAA,MAAM,CAACI,OAAP,GAAiB,MAAM;AACnBL,MAAAA,OAAO,CAAC,KAAD,CAAP;AACH,KAFD;;AAGAE,IAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,MAA1B;AACH,GAVM,CAAP;AAWH;;AAED,OAAO,SAASO,eAAT,CAAyBC,OAAzB,EAAkCC,MAAlC,EAA0C;AAC7C,SAAO,IAAIX,OAAJ,CAAY,OAAOC,OAAP,EAAgBW,MAAhB,KAA2B;AAC1C,UAAMC,GAAG,GAAG,MAAMf,UAAU,CACxB,8CADwB,CAA5B;;AAIA,QAAI,CAACe,GAAL,EAAU;AACNC,MAAAA,OAAO,CAACC,KAAR,CAAc,8CAAd;AACAH,MAAAA,MAAM;AACN;AACH;;AAED,UAAMI,OAAO,GAAG;AACZC,MAAAA,GAAG,EAAE,yBADO;AACoB;AAChCN,MAAAA,MAAM,EAAEA,MAAM,CAACO,QAAP,EAFI;AAGZC,MAAAA,QAAQ,EAAE,KAHE;AAIZC,MAAAA,IAAI,EAAE,QAJM;AAKZC,MAAAA,WAAW,EAAE,uBALD;AAMZC,MAAAA,KAAK,EAAE;AAAEC,QAAAA,IAAI,EAAE;AAAR,OANK;AAOZC,MAAAA,QAAQ,EAAEd,OAPE;AAQZe,MAAAA,OAAO,EAAE,gBAAgBC,QAAhB,EAA0B;AAC/B,cAAMC,IAAI,GAAG;AACTC,UAAAA,mBAAmB,EAAEF,QAAQ,CAACE,mBADrB;AAETC,UAAAA,iBAAiB,EAAEH,QAAQ,CAACG,iBAFnB;AAGTC,UAAAA,kBAAkB,EAAEJ,QAAQ,CAACI;AAHpB,SAAb;AAMA,cAAMC,MAAM,GAAG,MAAMlC,SAAS,CAACmC,IAAV,CAAe,mBAAf,EAAoCL,IAApC,CAArB;AACA1B,QAAAA,OAAO,CAAC8B,MAAD,CAAP;AACH,OAjBW;AAkBZE,MAAAA,OAAO,EAAE;AACLb,QAAAA,IAAI,EAAE,QADD;AAELc,QAAAA,KAAK,EAAE,iBAFF;AAGLC,QAAAA,OAAO,EAAE;AAHJ,OAlBG;AAuBZC,MAAAA,KAAK,EAAE;AACHC,QAAAA,OAAO,EAAE;AADN,OAvBK;AA0BZC,MAAAA,KAAK,EAAE;AACHC,QAAAA,KAAK,EAAE;AADJ;AA1BK,KAAhB;AA+BA,UAAMC,aAAa,GAAG,IAAIC,MAAM,CAACC,QAAX,CAAoB1B,OAApB,CAAtB;AACAwB,IAAAA,aAAa,CAACG,IAAd;AACH,GA5CM,CAAP;AA6CH","sourcesContent":["import { ApiClient } from './ApiClient';\n\nfunction loadScript(src) {\n    return new Promise((resolve) => {\n        const script = document.createElement(\"script\");\n        script.src = src;\n        script.onload = () => {\n            resolve(true);\n        };\n        script.onerror = () => {\n            resolve(false);\n        };\n        document.body.appendChild(script);\n    });\n}\n\nexport function displayRazorpay(orderId, amount) {\n    return new Promise(async (resolve, reject) => {\n        const res = await loadScript(\n            \"https://checkout.razorpay.com/v1/checkout.js\"\n        );\n\n        if (!res) {\n            console.error(\"Razorpay SDK failed to load. Are you online?\");\n            reject();\n            return;\n        }\n\n        const options = {\n            key: \"rzp_test_HwygC9FrX26ndC\", // Enter the Key ID generated from the Dashboard\n            amount: amount.toString(),\n            currency: \"INR\",\n            name: \"STORE.\",\n            description: \"Payment for an order.\",\n            image: { logo: null },\n            order_id: orderId,\n            handler: async function (response) {\n                const data = {\n                    razorpay_payment_id: response.razorpay_payment_id,\n                    razorpay_order_id: response.razorpay_order_id,\n                    razorpay_signature: response.razorpay_signature,\n                };\n\n                const result = await ApiClient.post(\"/razorpay/payment\", data);\n                resolve(result);\n            },\n            prefill: {\n                name: \"STORE.\",\n                email: \"admin@store.com\",\n                contact: \"9999999999\",\n            },\n            notes: {\n                address: \"Store Office\",\n            },\n            theme: {\n                color: \"#61dafb\",\n            },\n        };\n\n        const paymentObject = new window.Razorpay(options);\n        paymentObject.open();\n    });\n}"]},"metadata":{},"sourceType":"module"}