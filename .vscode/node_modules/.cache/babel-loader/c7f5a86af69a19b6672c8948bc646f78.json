{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\virtusa\\\\project\\\\football_league_management\\\\src\\\\pages\\\\Signup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useStateValue } from \"../utils/StateProvider\";\nimport { openSnackbar } from \"../utils/Reducer\";\nimport { Input, Grid } from '@mui/material';\nimport { useHistory } from 'react-router-dom';\nimport { ApiClient } from '../utils/ApiClient';\nimport LoadingButton from '@mui/lab/LoadingButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction validateEmail(email) {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nfunction Login() {\n  _s();\n\n  const [state, dispatch] = useStateValue();\n  const [email, setEmail] = useState(\"\");\n  const [username, setUsername] = useState('');\n  const [mobile, setMobile] = useState('');\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [emailError, setEmailError] = useState(false);\n  const [usernameError, setusernameError] = useState(false);\n  const [mobError, setMobError] = useState(false);\n  const [passwordError, setPasswordError] = useState(false);\n  const [confirmPasswordError, setConfirmPasswordError] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  const onSubmit = () => {\n    setEmailError(false);\n    setusernameError(false);\n    setMobError(false);\n    setPasswordError(false);\n    setConfirmPasswordError(false);\n\n    if (!validateEmail(email)) {\n      setEmailError(true);\n      dispatch(openSnackbar('Invalid Email.', 'error'));\n      return;\n    }\n\n    if (username.trim() === '') {\n      setusernameError(true);\n      dispatch(openSnackbar('Username cannot be empty.', 'error'));\n      return;\n    }\n\n    if (!/^\\d{10}$/.test(mobile)) {\n      setMobError(true);\n      dispatch(openSnackbar('Invalid mobile number.', 'error'));\n      return;\n    }\n\n    if (password.length < 5) {\n      setPasswordError(true);\n      dispatch(openSnackbar('Length of password should be at least 5.', 'error'));\n      return;\n    }\n\n    if (password !== confirmPassword) {\n      setConfirmPasswordError(true);\n      dispatch(openSnackbar('Confirm password does not match entered password.', 'error'));\n      return;\n    }\n\n    setLoading(true);\n    ApiClient.post('/signup', {\n      email,\n      username,\n      password,\n      mobileNumber: mobile\n    }).then(response => {\n      if (response.data) {\n        // success\n        dispatch(openSnackbar('Welcome to STORE. Please check your inbox for the verification email then login using your new credentials.', 'success'));\n        history.push('/');\n      }\n    }).finally(() => setLoading(false));\n    ;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    maxWidth: \"md\",\n    style: {\n      height: '100vh',\n      justifyContent: 'center',\n      alignItems: 'center',\n      margin: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      lg: 6,\n      id: \"signupBox\",\n      sx: {\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      style: {\n        maxWidth: '20rem'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          marginBottom: '10px'\n        },\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"email\",\n        placeholder: \"Enter Email\",\n        error: emailError,\n        type: \"email\",\n        value: email,\n        onChange: e => setEmail(e.target.value),\n        style: {\n          margin: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"username\",\n        placeholder: \"Enter Username\",\n        error: usernameError,\n        type: \"text\",\n        value: username,\n        onChange: e => setUsername(e.target.value),\n        style: {\n          margin: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"mobilenumber\",\n        placeholder: \"Enter Mobile Number\",\n        error: mobError,\n        type: \"text\",\n        value: mobile,\n        onChange: e => setMobile(e.target.value),\n        style: {\n          margin: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"password\",\n        placeholder: \"Enter Password\",\n        error: passwordError,\n        type: \"password\",\n        value: password,\n        onChange: e => setPassword(e.target.value),\n        style: {\n          margin: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        id: \"confirmpassword\",\n        placeholder: \"Confirm Password\",\n        error: confirmPasswordError,\n        type: \"password\",\n        value: confirmPassword,\n        onChange: e => setConfirmPassword(e.target.value),\n        style: {\n          margin: '10px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(LoadingButton, {\n        id: \"submitButton\",\n        variant: \"contained\",\n        onClick: onSubmit,\n        style: {\n          margin: '10px'\n        },\n        loading: loading,\n        loadingIndicator: \"Signing up...\",\n        children: \"SIGN UP\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Already a member? \", /*#__PURE__*/_jsxDEV(\"a\", {\n          id: \"signinLink\",\n          href: \"#\",\n          onClick: () => history.push('/'),\n          children: \"Click here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      lg: 6,\n      style: {\n        maxWidth: '20rem'\n      },\n      sx: {\n        display: {\n          xs: 'none',\n          md: 'block'\n        }\n      },\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/images/signup_image.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 7\n  }, this);\n}\n\n_s(Login, \"ndMtmn5YgewrJwSmyLYf9CpssUk=\", false, function () {\n  return [useStateValue, useHistory];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/HP/Desktop/virtusa/project/football_league_management/src/pages/Signup.js"],"names":["React","useState","useStateValue","openSnackbar","Input","Grid","useHistory","ApiClient","LoadingButton","validateEmail","email","re","test","String","toLowerCase","Login","state","dispatch","setEmail","username","setUsername","mobile","setMobile","password","setPassword","confirmPassword","setConfirmPassword","emailError","setEmailError","usernameError","setusernameError","mobError","setMobError","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","loading","setLoading","history","onSubmit","trim","length","post","mobileNumber","then","response","data","push","finally","height","justifyContent","alignItems","margin","display","flexDirection","maxWidth","marginBottom","e","target","value","xs","md"],"mappings":"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","sourcesContent":["import React , {useState} from 'react'\nimport { useStateValue } from \"../utils/StateProvider\";\nimport { openSnackbar } from \"../utils/Reducer\";\nimport { Input, Grid } from '@mui/material'\nimport { useHistory } from 'react-router-dom';\nimport { ApiClient } from '../utils/ApiClient';\nimport LoadingButton from '@mui/lab/LoadingButton';\n\nfunction validateEmail(email) {\n  const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n  return re.test(String(email).toLowerCase());\n}\n\nfunction Login() {\n    \n    const [state, dispatch] = useStateValue();\n\n    const [email , setEmail] = useState(\"\")\n    const [username , setUsername] = useState('');\n    const [mobile , setMobile] = useState('')\n    const [password , setPassword] = useState(\"\")\n    const [confirmPassword , setConfirmPassword] = useState(\"\")\n\n    const [emailError , setEmailError] = useState(false);\n    const [usernameError , setusernameError] = useState(false);\n    const [mobError , setMobError] = useState(false);\n    const [passwordError , setPasswordError] = useState(false);\n    const [confirmPasswordError , setConfirmPasswordError] = useState(false);\n    const [loading, setLoading] = useState(false);\n    \n    const history = useHistory();\n\n    const onSubmit = () =>{\n      setEmailError(false);\n      setusernameError(false)\n      setMobError(false)\n      setPasswordError(false)\n      setConfirmPasswordError(false)\n\n      if(!validateEmail(email)){\n        setEmailError(true);\n        dispatch(openSnackbar('Invalid Email.', 'error'));\n        return;\n      }\n\n      if(username.trim() === ''){\n        setusernameError(true);\n        dispatch(openSnackbar('Username cannot be empty.', 'error'));\n        return;\n      }\n\n      if(!(/^\\d{10}$/.test(mobile))){\n        setMobError(true);\n        dispatch(openSnackbar('Invalid mobile number.', 'error'));\n        return;\n      }\n\n      if(password.length < 5){\n        setPasswordError(true);\n        dispatch(openSnackbar('Length of password should be at least 5.', 'error'));\n        return;\n      }\n\n      if(password !== confirmPassword){\n        setConfirmPasswordError(true);\n        dispatch(openSnackbar('Confirm password does not match entered password.', 'error'));\n        return;\n      }\n\n      setLoading(true);\n      ApiClient.post('/signup', {\n        email, username, password, mobileNumber: mobile\n      }).then(response => {\n        if (response.data) {\n          // success\n          dispatch(openSnackbar('Welcome to STORE. Please check your inbox for the verification email then login using your new credentials.', 'success'));\n          history.push('/');\n        }\n      }).finally(() => setLoading(false));;\n\n    }\n\n    return (\n      <Grid container maxWidth=\"md\" style={{height : '100vh', justifyContent: 'center', alignItems: 'center', margin: 'auto' }}>\n        <Grid item lg={6} id=\"signupBox\" sx={{ display: 'flex', flexDirection: 'column' }} style={{maxWidth: '20rem'}}>\n          <h1 style = {{marginBottom : '10px'}} >SIGN UP</h1>\n          <Input id = 'email' placeholder = \"Enter Email\" error = {emailError} type = \"email\" value = {email} onChange = {(e)=>setEmail(e.target.value)} style ={{margin : '10px'}} />\n          <Input id = 'username' placeholder = \"Enter Username\" error = {usernameError} type = \"text\" value = {username} onChange = {(e) => setUsername(e.target.value)} style = {{margin : '10px'}}/>\n          <Input id = 'mobilenumber' placeholder = \"Enter Mobile Number\" error = {mobError} type = \"text\" value = {mobile} onChange = {(e) => setMobile(e.target.value)} style = {{margin : '10px'}}/>\n          <Input id = 'password' placeholder = \"Enter Password\" error = {passwordError} type = \"password\" value = {password} onChange = {(e) => setPassword(e.target.value)} style = {{margin : '10px'}}/>\n          <Input id = 'confirmpassword' placeholder = \"Confirm Password\" error = {confirmPasswordError} type = \"password\" value = {confirmPassword} onChange = {(e) => setConfirmPassword(e.target.value)} style = {{margin : '10px'}}/>\n          <LoadingButton \n            id = 'submitButton' \n            variant = 'contained' \n            onClick = {onSubmit} \n            style = {{margin : '10px'}} \n            loading={loading}\n            loadingIndicator=\"Signing up...\">\n            SIGN UP\n          </LoadingButton>\n          <div>Already a member? <a id='signinLink'  href=\"#\" onClick={() => history.push('/') }>Click here</a></div>\n        </Grid>\n        <Grid item lg={6} style={{maxWidth: '20rem'}} sx={{ display: { xs: 'none', md: 'block' } }}>\n          <img src=\"/images/signup_image.png\" />\n        </Grid>\n      </Grid>\n    );\n}\n\nexport default Login;"]},"metadata":{},"sourceType":"module"}